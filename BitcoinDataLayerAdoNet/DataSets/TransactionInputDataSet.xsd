<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TransactionInputDataSet" targetNamespace="http://tempuri.org/TransactionInputDataSet.xsd" xmlns:mstns="http://tempuri.org/TransactionInputDataSet.xsd" xmlns="http://tempuri.org/TransactionInputDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BitcoinDatabaseConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BitcoinDatabaseConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BitcoinDataLayerAdoNet.Properties.Settings.GlobalReference.Default.BitcoinDatabaseConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionInputTableAdapter" GeneratorDataComponentClassName="TransactionInputTableAdapter" Name="TransactionInput" UserDataComponentName="TransactionInputTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BitcoinDatabaseConnectionString1 (Settings)" DbObjectName="BitcoinDatabase.dbo.TransactionInput" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TransactionInput] WHERE (([TransactionInputId] = @Original_TransactionInputId) AND ([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ((@IsNull_SourceTransactionOutputId = 1 AND [SourceTransactionOutputId] IS NULL) OR ([SourceTransactionOutputId] = @Original_SourceTransactionOutputId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SourceTransactionOutputId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TransactionInput] ([TransactionInputId], [BitcoinTransactionId], [SourceTransactionOutputId]) VALUES (@TransactionInputId, @BitcoinTransactionId, @SourceTransactionOutputId);
SELECT TransactionInputId, BitcoinTransactionId, SourceTransactionOutputId FROM TransactionInput WHERE (TransactionInputId = @TransactionInputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TransactionInputId, BitcoinTransactionId, SourceTransactionOutputId FROM dbo.TransactionInput</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TransactionInput] SET [TransactionInputId] = @TransactionInputId, [BitcoinTransactionId] = @BitcoinTransactionId, [SourceTransactionOutputId] = @SourceTransactionOutputId WHERE (([TransactionInputId] = @Original_TransactionInputId) AND ([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ((@IsNull_SourceTransactionOutputId = 1 AND [SourceTransactionOutputId] IS NULL) OR ([SourceTransactionOutputId] = @Original_SourceTransactionOutputId)));
SELECT TransactionInputId, BitcoinTransactionId, SourceTransactionOutputId FROM TransactionInput WHERE (TransactionInputId = @TransactionInputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SourceTransactionOutputId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TransactionInputId" DataSetColumn="TransactionInputId" />
              <Mapping SourceColumn="BitcoinTransactionId" DataSetColumn="BitcoinTransactionId" />
              <Mapping SourceColumn="SourceTransactionOutputId" DataSetColumn="SourceTransactionOutputId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TransactionInputDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="TransactionInputDataSet" msprop:Generator_UserDSName="TransactionInputDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TransactionInput" msprop:Generator_TableClassName="TransactionInputDataTable" msprop:Generator_TableVarName="tableTransactionInput" msprop:Generator_TablePropName="TransactionInput" msprop:Generator_RowDeletingName="TransactionInputRowDeleting" msprop:Generator_RowChangingName="TransactionInputRowChanging" msprop:Generator_RowEvHandlerName="TransactionInputRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionInputRowDeleted" msprop:Generator_UserTableName="TransactionInput" msprop:Generator_RowChangedName="TransactionInputRowChanged" msprop:Generator_RowEvArgName="TransactionInputRowChangeEvent" msprop:Generator_RowClassName="TransactionInputRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TransactionInputId" msprop:Generator_ColumnVarNameInTable="columnTransactionInputId" msprop:Generator_ColumnPropNameInRow="TransactionInputId" msprop:Generator_ColumnPropNameInTable="TransactionInputIdColumn" msprop:Generator_UserColumnName="TransactionInputId" type="xs:long" />
              <xs:element name="BitcoinTransactionId" msprop:Generator_ColumnVarNameInTable="columnBitcoinTransactionId" msprop:Generator_ColumnPropNameInRow="BitcoinTransactionId" msprop:Generator_ColumnPropNameInTable="BitcoinTransactionIdColumn" msprop:Generator_UserColumnName="BitcoinTransactionId" type="xs:long" />
              <xs:element name="SourceTransactionOutputId" msprop:Generator_ColumnVarNameInTable="columnSourceTransactionOutputId" msprop:Generator_ColumnPropNameInRow="SourceTransactionOutputId" msprop:Generator_ColumnPropNameInTable="SourceTransactionOutputIdColumn" msprop:Generator_UserColumnName="SourceTransactionOutputId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>