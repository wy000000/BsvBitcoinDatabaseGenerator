<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BitcoinTransactionDataSet" targetNamespace="http://tempuri.org/BitcoinTransactionDataSet.xsd" xmlns:mstns="http://tempuri.org/BitcoinTransactionDataSet.xsd" xmlns="http://tempuri.org/BitcoinTransactionDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BitcoinDatabaseConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BitcoinDatabaseConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BitcoinDataLayerAdoNet.Properties.Settings.GlobalReference.Default.BitcoinDatabaseConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BitcoinTransactionTableAdapter" GeneratorDataComponentClassName="BitcoinTransactionTableAdapter" Name="BitcoinTransaction" UserDataComponentName="BitcoinTransactionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BitcoinDatabaseConnectionString1 (Settings)" DbObjectName="BitcoinDatabase.dbo.BitcoinTransaction" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BitcoinTransaction] WHERE (([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ([BlockId] = @Original_BlockId) AND ([TransactionHash] = @Original_TransactionHash) AND ([TransactionVersion] = @Original_TransactionVersion) AND ([TransactionLockTime] = @Original_TransactionLockTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BitcoinTransaction] ([BitcoinTransactionId], [BlockId], [TransactionHash], [TransactionVersion], [TransactionLockTime]) VALUES (@BitcoinTransactionId, @BlockId, @TransactionHash, @TransactionVersion, @TransactionLockTime);
SELECT BitcoinTransactionId, BlockId, TransactionHash, TransactionVersion, TransactionLockTime FROM BitcoinTransaction WHERE (BitcoinTransactionId = @BitcoinTransactionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BitcoinTransactionId, BlockId, TransactionHash, TransactionVersion, TransactionLockTime FROM dbo.BitcoinTransaction</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BitcoinTransaction] SET [BitcoinTransactionId] = @BitcoinTransactionId, [BlockId] = @BlockId, [TransactionHash] = @TransactionHash, [TransactionVersion] = @TransactionVersion, [TransactionLockTime] = @TransactionLockTime WHERE (([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ([BlockId] = @Original_BlockId) AND ([TransactionHash] = @Original_TransactionHash) AND ([TransactionVersion] = @Original_TransactionVersion) AND ([TransactionLockTime] = @Original_TransactionLockTime));
SELECT BitcoinTransactionId, BlockId, TransactionHash, TransactionVersion, TransactionLockTime FROM BitcoinTransaction WHERE (BitcoinTransactionId = @BitcoinTransactionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BitcoinTransactionId" DataSetColumn="BitcoinTransactionId" />
              <Mapping SourceColumn="BlockId" DataSetColumn="BlockId" />
              <Mapping SourceColumn="TransactionHash" DataSetColumn="TransactionHash" />
              <Mapping SourceColumn="TransactionVersion" DataSetColumn="TransactionVersion" />
              <Mapping SourceColumn="TransactionLockTime" DataSetColumn="TransactionLockTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BitcoinTransactionDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="BitcoinTransactionDataSet" msprop:Generator_UserDSName="BitcoinTransactionDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BitcoinTransaction" msprop:Generator_TableClassName="BitcoinTransactionDataTable" msprop:Generator_TableVarName="tableBitcoinTransaction" msprop:Generator_TablePropName="BitcoinTransaction" msprop:Generator_RowDeletingName="BitcoinTransactionRowDeleting" msprop:Generator_RowChangingName="BitcoinTransactionRowChanging" msprop:Generator_RowEvHandlerName="BitcoinTransactionRowChangeEventHandler" msprop:Generator_RowDeletedName="BitcoinTransactionRowDeleted" msprop:Generator_UserTableName="BitcoinTransaction" msprop:Generator_RowChangedName="BitcoinTransactionRowChanged" msprop:Generator_RowEvArgName="BitcoinTransactionRowChangeEvent" msprop:Generator_RowClassName="BitcoinTransactionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BitcoinTransactionId" msprop:Generator_ColumnVarNameInTable="columnBitcoinTransactionId" msprop:Generator_ColumnPropNameInRow="BitcoinTransactionId" msprop:Generator_ColumnPropNameInTable="BitcoinTransactionIdColumn" msprop:Generator_UserColumnName="BitcoinTransactionId" type="xs:long" />
              <xs:element name="BlockId" msprop:Generator_ColumnVarNameInTable="columnBlockId" msprop:Generator_ColumnPropNameInRow="BlockId" msprop:Generator_ColumnPropNameInTable="BlockIdColumn" msprop:Generator_UserColumnName="BlockId" type="xs:long" />
              <xs:element name="TransactionHash" msprop:Generator_ColumnVarNameInTable="columnTransactionHash" msprop:Generator_ColumnPropNameInRow="TransactionHash" msprop:Generator_ColumnPropNameInTable="TransactionHashColumn" msprop:Generator_UserColumnName="TransactionHash" type="xs:base64Binary" />
              <xs:element name="TransactionVersion" msprop:Generator_ColumnVarNameInTable="columnTransactionVersion" msprop:Generator_ColumnPropNameInRow="TransactionVersion" msprop:Generator_ColumnPropNameInTable="TransactionVersionColumn" msprop:Generator_UserColumnName="TransactionVersion" type="xs:int" />
              <xs:element name="TransactionLockTime" msprop:Generator_ColumnVarNameInTable="columnTransactionLockTime" msprop:Generator_ColumnPropNameInRow="TransactionLockTime" msprop:Generator_ColumnPropNameInTable="TransactionLockTimeColumn" msprop:Generator_UserColumnName="TransactionLockTime" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>